#!/bin/bash

set -e

STCV_DIR="/home/ec2-user/SageMaker/.stcv"

STCV_DOCKER_DIR="${STCV_DIR}/docker_data_dir"
STCV_PERSISTENT_CONDA_DIR="${STCV_DIR}/persistent_conda_data_dir"
STCV_AUTOSTART_FILE="${STCV_DIR}/autostart.conf"

sudo -u ec2-user mkdir -p ${STCV_DIR}

echo "=> Setting up persistent conda environments"
mkdir -p ${STCV_PERSISTENT_CONDA_DIR} && chown ec2-user:ec2-user ${STCV_PERSISTENT_CONDA_DIR}
envdirs_clean=$(grep "envs_dirs:" /home/ec2-user/.condarc || echo "clean")
if [[ "${envdirs_clean}" != "clean" ]]; then
    echo "envs_dirs config already exists in /home/ec2-user/.condarc. No idea what to do. Exiting!"
    exit 1
fi
echo "Adding ${STCV_PERSISTENT_CONDA_DIR} to list of conda env locations"
cat << EOF >> /home/ec2-user/.condarc
envs_dirs:
  - ${STCV_PERSISTENT_CONDA_DIR}
  - /home/ec2-user/anaconda3/envs
EOF


echo "=> Setting persistent environment variables"
cat << EOF >> /home/ec2-user/.bashrc

export FIFTYONE_DATABASE_URI=mongodb://127.0.0.1:27017
export FIFTYONE_DEFAULT_DATASET_DIR=/home/ec2-user/SageMaker/.stcv/fiftyone_data_dir

EOF
source /home/ec2-user/.bashrc


echo "=> Updating Jupyter Server Proxy"
sudo -u ec2-user /home/ec2-user/anaconda3/envs/JupyterSystemEnv/bin/pip uninstall -y nbserverproxy jupyter-server-proxy
sudo -u ec2-user /home/ec2-user/anaconda3/envs/JupyterSystemEnv/bin/pip install jupyter-server-proxy
sudo systemctl restart jupyter-server


echo "=> Changing Docker images directory from /var/lib/docker to ${STCV_DOCKER_DIR}"
sudo service docker stop
if [ ! -d ${STCV_DOCKER_DIR} ]; then
    sudo mkdir -p ${STCV_DOCKER_DIR}
fi
sudo rm -rf /var/lib/docker
sudo ln -s ${STCV_DOCKER_DIR} /var/lib/docker
sudo service docker start


if [ -f "${STCV_AUTOSTART_FILE}" ]; then
  export STCV_CONTAINER_ID=$(cat ${STCV_AUTOSTART_FILE})
  echo "Read container ID ${STCV_CONTAINER_ID} from ${STCV_AUTOSTART_FILE}"
  echo "=> Checking if container exists"
  CID=$(docker ps -a -q -f id=${STCV_CONTAINER_ID})
  if [ ! "${CID}" ]; then
    echo "=> Container does not exist"
  else
    echo "=> Container exists. Starting..."
    docker start ${STCV_CONTAINER_ID}
  fi
else
  echo "=> No container ID found in ${STCV_AUTOSTART_FILE}. Not starting any container."
fi
